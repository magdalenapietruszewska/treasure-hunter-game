{"ast":null,"code":"var _jsxFileName = \"/home/magda/treasure-hunter/src/components/GameBoard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport useCheckField from \"./useCheckField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GameBoard = () => {\n  _s();\n\n  const [move, setMove] = useState(1);\n  const uncoveredFields = useSelector(state => state.uncoveredFields);\n  const selectFields = useSelector(state => state.selectFields);\n  const game = useSelector(state => state.game);\n  const line = [\"1\", \"2\", \"3\", \"4\", \"5\"];\n  let name;\n  let treasures = [];\n  const isUseCheckField = useCheckField();\n  useEffect(() => {\n    if (game.gameStatus === \"END\") {\n      setTimeout(function () {\n        let coverField = document.querySelectorAll(\".field\");\n        coverField.forEach(field => field.classList.remove(\"treasure\"));\n        coverField.forEach(field => field.classList.remove(\"uncover\"));\n        coverField.forEach(field => field.innerHTML = \"\");\n        window.store.dispatch({\n          type: \"RESET_SELECT_FIELD\"\n        });\n        window.store.dispatch({\n          type: \"RESET_UNCOVER_FIELD\"\n        });\n        setName();\n        drawTreasures();\n        window.store.dispatch({\n          type: \"START\",\n          status: \"START\",\n          name: name,\n          treasures: treasures\n        });\n      }, 3000);\n    }\n\n    if (game.gameStatus === null) {\n      setName();\n      drawTreasures();\n      window.store.dispatch({\n        type: \"START\",\n        status: \"START\",\n        name: name,\n        treasures: treasures\n      });\n    } // eslint-disable-next-line\n\n  }, [game.gameStatus]);\n  console.log(uncoveredFields);\n  console.log(game);\n\n  const setName = () => {\n    name = document.cookie.substr(5);\n\n    if (name.length === 0 || name === \"null\") {\n      let name = prompt(\"Please enter your name\");\n      document.cookie = \"name=\" + name;\n    }\n\n    return name;\n  };\n\n  const drawTreasures = () => {\n    do {\n      let treasure = (Math.floor(Math.random() * (5 - 1 + 1)) + 1).toString() + (Math.floor(Math.random() * (5 - 1 + 1)) + 1);\n\n      if (treasures.includes(treasure) === false) {\n        treasures.push(treasure);\n      }\n    } while (treasures.length < 3);\n\n    return treasures;\n  };\n\n  useEffect(() => {\n    for (let i = 0; i < uncoveredFields.length; i++) {\n      console.log(uncoveredFields[i].id);\n      let coverField = document.getElementById(uncoveredFields[i].id);\n      coverField.innerText = uncoveredFields[i].find;\n\n      if (uncoveredFields[i].find === \"T\") {\n        coverField.classList.add(\"treasure\");\n      } else {\n        coverField.classList.add(\"uncover\");\n      }\n    } // eslint-disable-next-line\n\n  }, [uncoveredFields]);\n  useEffect(() => {\n    if (move === 4) {\n      for (let i = 0; i < selectFields.length; i++) {\n        console.log(isUseCheckField.check(selectFields[i]));\n      }\n\n      setMove(1);\n      window.store.dispatch({\n        type: \"RESET_SELECT_FIELD\"\n      });\n    } // eslint-disable-next-line\n\n  }, [move]);\n  useEffect(() => {\n    if (game.findedTreasures === 3) {\n      window.store.dispatch({\n        type: \"END\",\n        status: \"END\",\n        scores: {\n          name: game.player,\n          score: game.moves\n        }\n      });\n    } // eslint-disable-next-line\n\n  }, [game.findedTreasures]);\n\n  const markField = field => {\n    function isFreeField(element) {\n      return element === field;\n    }\n\n    function isCoverField(element) {\n      return element.id === field;\n    }\n\n    if (selectFields.some(isFreeField) === false && uncoveredFields !== undefined && uncoveredFields.some(isCoverField) === false) {\n      window.store.dispatch({\n        type: \"ADD_SELECT_FIELD\",\n        field: field\n      });\n      setMove(prevState => prevState + 1);\n    }\n\n    console.log(selectFields);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gameBoard\",\n    children: line.map((col, id) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: line.map((row, id) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            id: `${col + row}`,\n            className: selectFields.length > 0 && selectFields.includes(`${col + row}`) ? `${col + row} field select` : `${col + row} field`,\n            onClick: () => markField(col + row)\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 17\n          }, this);\n        })\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GameBoard, \"dKTsfsOtallsKrKoNMWdBcqSPoE=\", false, function () {\n  return [useSelector, useSelector, useSelector, useCheckField];\n});\n\n_c = GameBoard;\nexport default GameBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"sources":["/home/magda/treasure-hunter/src/components/GameBoard.js"],"names":["React","useState","useEffect","useSelector","useCheckField","GameBoard","move","setMove","uncoveredFields","state","selectFields","game","line","name","treasures","isUseCheckField","gameStatus","setTimeout","coverField","document","querySelectorAll","forEach","field","classList","remove","innerHTML","window","store","dispatch","type","setName","drawTreasures","status","console","log","cookie","substr","length","prompt","treasure","Math","floor","random","toString","includes","push","i","id","getElementById","innerText","find","add","check","findedTreasures","scores","player","score","moves","markField","isFreeField","element","isCoverField","some","undefined","prevState","map","col","row"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport useCheckField from \"./useCheckField\";\n\nconst GameBoard = () => {\n  const [move, setMove] = useState(1);\n\n  const uncoveredFields = useSelector((state) => state.uncoveredFields);\n  const selectFields = useSelector((state) => state.selectFields);\n  const game = useSelector((state) => state.game);\n\n  const line = [\"1\", \"2\", \"3\", \"4\", \"5\"];\n  let name;\n  let treasures = [];\n\n  const isUseCheckField = useCheckField();\n\n  useEffect(() => {\n    if (game.gameStatus === \"END\") {\n      setTimeout(function () {\n        let coverField = document.querySelectorAll(\".field\");\n        coverField.forEach((field) => field.classList.remove(\"treasure\"));\n        coverField.forEach((field) => field.classList.remove(\"uncover\"));\n        coverField.forEach((field) => (field.innerHTML = \"\"));\n        window.store.dispatch({ type: \"RESET_SELECT_FIELD\" });\n        window.store.dispatch({ type: \"RESET_UNCOVER_FIELD\" });\n        setName();\n        drawTreasures();\n        window.store.dispatch({\n          type: \"START\",\n          status: \"START\",\n          name: name,\n          treasures: treasures,\n        });\n      }, 3000);\n    }\n    if (game.gameStatus === null) {\n      setName();\n      drawTreasures();\n      window.store.dispatch({\n        type: \"START\",\n        status: \"START\",\n        name: name,\n        treasures: treasures,\n      });\n    }\n    // eslint-disable-next-line\n  }, [game.gameStatus]);\n\n  console.log(uncoveredFields);\n  console.log(game);\n\n  const setName = () => {\n    name = document.cookie.substr(5);\n    if (name.length === 0 || name === \"null\") {\n      let name = prompt(\"Please enter your name\");\n      document.cookie = \"name=\" + name;\n    }\n    return name;\n  };\n\n  const drawTreasures = () => {\n    do {\n      let treasure =\n        (Math.floor(Math.random() * (5 - 1 + 1)) + 1).toString() +\n        (Math.floor(Math.random() * (5 - 1 + 1)) + 1);\n\n      if (treasures.includes(treasure) === false) {\n        treasures.push(treasure);\n      }\n    } while (treasures.length < 3);\n    return treasures;\n  };\n\n  useEffect(() => {\n    for (let i = 0; i < uncoveredFields.length; i++) {\n      console.log(uncoveredFields[i].id);\n      let coverField = document.getElementById(uncoveredFields[i].id);\n      coverField.innerText = uncoveredFields[i].find;\n      if (uncoveredFields[i].find === \"T\") {\n        coverField.classList.add(\"treasure\");\n      } else {\n        coverField.classList.add(\"uncover\");\n      }\n    }\n    // eslint-disable-next-line\n  }, [uncoveredFields]);\n\n  useEffect(() => {\n    if (move === 4) {\n      for (let i = 0; i < selectFields.length; i++) {\n        console.log(isUseCheckField.check(selectFields[i]));\n      }\n      setMove(1);\n      window.store.dispatch({ type: \"RESET_SELECT_FIELD\" });\n    }\n    // eslint-disable-next-line\n  }, [move]);\n\n  useEffect(() => {\n    if (game.findedTreasures === 3) {\n      window.store.dispatch({\n        type: \"END\",\n        status: \"END\",\n        scores: { name: game.player, score: game.moves },\n      });\n    }\n    // eslint-disable-next-line\n  }, [game.findedTreasures]);\n\n  const markField = (field) => {\n    function isFreeField(element) {\n      return element === field;\n    }\n\n    function isCoverField(element) {\n      return element.id === field;\n    }\n\n    if (\n      selectFields.some(isFreeField) === false &&\n      uncoveredFields !== undefined &&\n      uncoveredFields.some(isCoverField) === false\n    ) {\n      window.store.dispatch({ type: \"ADD_SELECT_FIELD\", field: field });\n      setMove((prevState) => prevState + 1);\n    }\n    console.log(selectFields);\n  };\n\n  return (\n    <div className=\"gameBoard\">\n      {line.map((col, id) => {\n        return (\n          <div key={id}>\n            {line.map((row, id) => {\n              return (\n                <div\n                  key={id}\n                  id={`${col + row}`}\n                  className={\n                    selectFields.length > 0 &&\n                    selectFields.includes(`${col + row}`)\n                      ? `${col + row} field select`\n                      : `${col + row} field`\n                  }\n                  onClick={() => markField(col + row)}\n                ></div>\n              );\n            })}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default GameBoard;\n"]},"metadata":{},"sourceType":"module"}