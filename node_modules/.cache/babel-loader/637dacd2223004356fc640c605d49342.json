{"ast":null,"code":"var _jsxFileName = \"/home/magda/treasure-hunter/src/components/GameBoard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\"; // import { startGame } from \"../store/actions\";\n// import { firestoreConnect } from \"react-redux-firebase\";\n// import { compose } from \"redux\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst GameBoard = () => {\n  _s();\n\n  const [move, setMove] = useState(1);\n  const line = [\"1\", \"2\", \"3\", \"4\", \"5\"];\n  const uncoveredFields = useSelector(state => state.uncoveredFields);\n  const selectFields = useSelector(state => state.selectedFields);\n  useEffect(() => {\n    for (let i = 0; i < uncoveredFields.length; i++) {\n      console.log(uncoveredFields[i].id);\n      let coverField = document.getElementById(uncoveredFields[i].id);\n      coverField.innerText = uncoveredFields[i].find;\n    } // eslint-disable-next-line\n\n  }, [uncoveredFields]);\n  useEffect(() => {\n    if (move === 4) {\n      console.log(\"sprawdzam\", selectFields);\n      setMove(1);\n      window.store.dispatch({\n        type: \"RESET_SELECT_FIELD\"\n      });\n    } // eslint-disable-next-line\n\n  }, [move]);\n\n  const markField = field => {\n    function isFreeField(element) {\n      return element === field;\n    } // console.log(selectFields.some(isFreeField));\n\n\n    function isCoverField(element) {\n      return element.id === field;\n    } // console.log(uncoveredFields.some(isCoverField));\n\n\n    if (selectFields !== undefined && selectFields.some(isFreeField) === false && uncoveredFields !== undefined && uncoveredFields.some(isCoverField) === false) {\n      window.store.dispatch({\n        type: \"ADD_SELECT_FIELD\",\n        field: field\n      });\n      setMove(prevState => prevState + 1);\n    }\n\n    console.log(selectFields);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [info === 1 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Choose three positions to find treasures!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameBoard\",\n      children: line.map((col, id) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: line.map((row, id) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              id: `${col + row}`,\n              className: selectFields.length > 0 && selectFields.includes(`${col + row}`) ? `${col + row} field select` : `${col + row} field`,\n              onClick: () => markField(col + row)\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this);\n          })\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}; // const mapStateToProps = (state) => {\n//   return {\n//     selectFields: state.selectFields.selectFields,\n//     uncoveredFields: state.uncoveredFields.uncoveredFields,\n//     game: state.game,\n//   };\n// };\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     startGame: (game) => dispatch(startGame(game)),\n//   };\n// };\n\n\n_s(GameBoard, \"zohfXTRHGTcnyAoFLO8F0uGGsR0=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = GameBoard;\nexport default GameBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"sources":["/home/magda/treasure-hunter/src/components/GameBoard.js"],"names":["React","useState","useEffect","useSelector","GameBoard","move","setMove","line","uncoveredFields","state","selectFields","selectedFields","i","length","console","log","id","coverField","document","getElementById","innerText","find","window","store","dispatch","type","markField","field","isFreeField","element","isCoverField","undefined","some","prevState","info","map","col","row","includes"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\n// import { startGame } from \"../store/actions\";\n// import { firestoreConnect } from \"react-redux-firebase\";\n// import { compose } from \"redux\";\n\nconst GameBoard = () => {\n  const [move, setMove] = useState(1);\n\n  const line = [\"1\", \"2\", \"3\", \"4\", \"5\"];\n\n  const uncoveredFields = useSelector((state) => state.uncoveredFields);\n  const selectFields = useSelector((state) => state.selectedFields);\n\n  useEffect(() => {\n    for (let i = 0; i < uncoveredFields.length; i++) {\n      console.log(uncoveredFields[i].id);\n      let coverField = document.getElementById(uncoveredFields[i].id);\n      coverField.innerText = uncoveredFields[i].find;\n    }\n\n    // eslint-disable-next-line\n  }, [uncoveredFields]);\n\n  useEffect(() => {\n    if (move === 4) {\n      console.log(\"sprawdzam\", selectFields);\n      setMove(1);\n      window.store.dispatch({ type: \"RESET_SELECT_FIELD\" });\n    }\n    // eslint-disable-next-line\n  }, [move]);\n\n  const markField = (field) => {\n    function isFreeField(element) {\n      return element === field;\n    }\n    // console.log(selectFields.some(isFreeField));\n\n    function isCoverField(element) {\n      return element.id === field;\n    }\n    // console.log(uncoveredFields.some(isCoverField));\n\n    if (\n      selectFields !== undefined &&\n      selectFields.some(isFreeField) === false &&\n      uncoveredFields !== undefined &&\n      uncoveredFields.some(isCoverField) === false\n    ) {\n      window.store.dispatch({ type: \"ADD_SELECT_FIELD\", field: field });\n      setMove((prevState) => prevState + 1);\n    }\n    console.log(selectFields);\n  };\n\n  return (\n    <>\n      {info === 1 && <p>Choose three positions to find treasures!</p>}\n      <div className=\"gameBoard\">\n        {line.map((col, id) => {\n          return (\n            <div key={id}>\n              {line.map((row, id) => {\n                return (\n                  <div\n                    key={id}\n                    id={`${col + row}`}\n                    className={\n                      selectFields.length > 0 &&\n                      selectFields.includes(`${col + row}`)\n                        ? `${col + row} field select`\n                        : `${col + row} field`\n                    }\n                    onClick={() => markField(col + row)}\n                  >\n                    {/* {col} */}\n                    {/* {row} */}\n                  </div>\n                );\n              })}\n            </div>\n          );\n        })}\n      </div>\n    </>\n  );\n};\n\n// const mapStateToProps = (state) => {\n//   return {\n//     selectFields: state.selectFields.selectFields,\n//     uncoveredFields: state.uncoveredFields.uncoveredFields,\n//     game: state.game,\n//   };\n// };\n\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     startGame: (game) => dispatch(startGame(game)),\n//   };\n// };\n\nexport default GameBoard;\n"]},"metadata":{},"sourceType":"module"}