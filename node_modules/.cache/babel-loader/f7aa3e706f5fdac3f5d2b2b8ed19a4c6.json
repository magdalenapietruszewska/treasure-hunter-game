{"ast":null,"code":"var _jsxFileName = \"/home/magda/treasure-hunter/src/components/GameBoard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport useCheckField from \"./useCheckField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GameBoard = () => {\n  _s();\n\n  const [move, setMove] = useState(1);\n  const uncoveredFields = useSelector(state => state.uncoveredFields);\n  const selectFields = useSelector(state => state.selectFields);\n  const game = useSelector(state => state.game);\n  const line = [\"1\", \"2\", \"3\", \"4\", \"5\"];\n  let name;\n  let treasures = [];\n  const isUseCheckField = useCheckField();\n  useEffect(() => {\n    if (game.gameStatus === \"END\") {\n      console.log(\"st\");\n      let coverField = document.getElementsByClassName(\".field\");\n      let treasureField = document.querySelectorAll(\".treasure\");\n      console.log(treasureField, \"treasureField\");\n      treasureField.classList.remove(\"treasure\");\n      coverField.innerHTML = \"gggg\"; // coverField.classList.remove(\"uncover\");\n      // coverField.classList.remove(\"treasure\");\n      // window.store.dispatch({ type: \"RESET_SELECT_FIELD\" });\n      // window.store.dispatch({ type: \"RESET_UNCOVER_FIELD\" });\n    }\n\n    if (game.gameStatus === null // || game.gameStatus === \"END\"\n    ) {\n        setName();\n        drawTreasures();\n        window.store.dispatch({\n          type: \"START\",\n          status: \"START\",\n          name: name,\n          treasures: treasures\n        });\n        console.log(name);\n        console.log(treasures);\n      } // eslint-disable-next-line\n\n  }, [game.gameStatus]);\n  console.log(uncoveredFields);\n  console.log(game);\n\n  const setName = () => {\n    name = document.cookie.substr(5);\n\n    if (name.length === 0 || name === \"null\") {\n      let name = prompt(\"Please enter your name\");\n      document.cookie = \"name=\" + name;\n    }\n\n    return name;\n  };\n\n  const drawTreasures = () => {\n    do {\n      let treasure = (Math.floor(Math.random() * (5 - 1 + 1)) + 1).toString() + (Math.floor(Math.random() * (5 - 1 + 1)) + 1);\n\n      if (treasures.includes(treasure) === false) {\n        treasures.push(treasure);\n      }\n    } while (treasures.length < 3);\n\n    return treasures;\n  };\n\n  useEffect(() => {\n    for (let i = 0; i < uncoveredFields.length; i++) {\n      console.log(uncoveredFields[i].id);\n      let coverField = document.getElementById(uncoveredFields[i].id);\n      coverField.innerText = uncoveredFields[i].find;\n\n      if (uncoveredFields[i].find === \"T\") {\n        coverField.classList.add(\"treasure\");\n      } else {\n        coverField.classList.add(\"uncover\");\n      }\n    } // eslint-disable-next-line\n\n  }, [uncoveredFields]);\n  useEffect(() => {\n    if (move === 4) {\n      for (let i = 0; i < selectFields.length; i++) {\n        console.log(isUseCheckField.check(selectFields[i]));\n      }\n\n      setMove(1);\n      window.store.dispatch({\n        type: \"RESET_SELECT_FIELD\"\n      });\n    } // eslint-disable-next-line\n\n  }, [move]);\n  useEffect(() => {\n    if (game.findedTreasures === 3) {\n      window.store.dispatch({\n        type: \"END\",\n        status: \"END\"\n      });\n    } // eslint-disable-next-line\n\n  }, [game.findedTreasures]);\n\n  const markField = field => {\n    function isFreeField(element) {\n      return element === field;\n    }\n\n    function isCoverField(element) {\n      return element.id === field;\n    }\n\n    if (selectFields.some(isFreeField) === false && uncoveredFields !== undefined && uncoveredFields.some(isCoverField) === false) {\n      window.store.dispatch({\n        type: \"ADD_SELECT_FIELD\",\n        field: field\n      });\n      setMove(prevState => prevState + 1);\n    }\n\n    console.log(selectFields);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gameBoard\",\n    children: line.map((col, id) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: line.map((row, id) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            id: `${col + row}`,\n            className: selectFields.length > 0 && selectFields.includes(`${col + row}`) ? `${col + row} field select` : `${col + row} field`,\n            onClick: () => markField(col + row)\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }, this);\n        })\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GameBoard, \"dKTsfsOtallsKrKoNMWdBcqSPoE=\", false, function () {\n  return [useSelector, useSelector, useSelector, useCheckField];\n});\n\n_c = GameBoard;\nexport default GameBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"sources":["/home/magda/treasure-hunter/src/components/GameBoard.js"],"names":["React","useState","useEffect","useSelector","useCheckField","GameBoard","move","setMove","uncoveredFields","state","selectFields","game","line","name","treasures","isUseCheckField","gameStatus","console","log","coverField","document","getElementsByClassName","treasureField","querySelectorAll","classList","remove","innerHTML","setName","drawTreasures","window","store","dispatch","type","status","cookie","substr","length","prompt","treasure","Math","floor","random","toString","includes","push","i","id","getElementById","innerText","find","add","check","findedTreasures","markField","field","isFreeField","element","isCoverField","some","undefined","prevState","map","col","row"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport useCheckField from \"./useCheckField\";\n\nconst GameBoard = () => {\n  const [move, setMove] = useState(1);\n\n  const uncoveredFields = useSelector((state) => state.uncoveredFields);\n  const selectFields = useSelector((state) => state.selectFields);\n  const game = useSelector((state) => state.game);\n\n  const line = [\"1\", \"2\", \"3\", \"4\", \"5\"];\n  let name;\n  let treasures = [];\n\n  const isUseCheckField = useCheckField();\n\n  useEffect(() => {\n    if (game.gameStatus === \"END\") {\n      console.log(\"st\");\n      let coverField = document.getElementsByClassName(\".field\");\n      let treasureField = document.querySelectorAll(\".treasure\");\n      console.log(treasureField, \"treasureField\");\n      treasureField.classList.remove(\"treasure\");\n      coverField.innerHTML = \"gggg\";\n      // coverField.classList.remove(\"uncover\");\n      // coverField.classList.remove(\"treasure\");\n      // window.store.dispatch({ type: \"RESET_SELECT_FIELD\" });\n      // window.store.dispatch({ type: \"RESET_UNCOVER_FIELD\" });\n    }\n    if (\n      game.gameStatus === null\n      // || game.gameStatus === \"END\"\n    ) {\n      setName();\n      drawTreasures();\n      window.store.dispatch({\n        type: \"START\",\n        status: \"START\",\n        name: name,\n        treasures: treasures,\n      });\n      console.log(name);\n      console.log(treasures);\n    }\n    // eslint-disable-next-line\n  }, [game.gameStatus]);\n\n  console.log(uncoveredFields);\n  console.log(game);\n\n  const setName = () => {\n    name = document.cookie.substr(5);\n    if (name.length === 0 || name === \"null\") {\n      let name = prompt(\"Please enter your name\");\n      document.cookie = \"name=\" + name;\n    }\n    return name;\n  };\n\n  const drawTreasures = () => {\n    do {\n      let treasure =\n        (Math.floor(Math.random() * (5 - 1 + 1)) + 1).toString() +\n        (Math.floor(Math.random() * (5 - 1 + 1)) + 1);\n\n      if (treasures.includes(treasure) === false) {\n        treasures.push(treasure);\n      }\n    } while (treasures.length < 3);\n    return treasures;\n  };\n\n  useEffect(() => {\n    for (let i = 0; i < uncoveredFields.length; i++) {\n      console.log(uncoveredFields[i].id);\n      let coverField = document.getElementById(uncoveredFields[i].id);\n      coverField.innerText = uncoveredFields[i].find;\n      if (uncoveredFields[i].find === \"T\") {\n        coverField.classList.add(\"treasure\");\n      } else {\n        coverField.classList.add(\"uncover\");\n      }\n    }\n    // eslint-disable-next-line\n  }, [uncoveredFields]);\n\n  useEffect(() => {\n    if (move === 4) {\n      for (let i = 0; i < selectFields.length; i++) {\n        console.log(isUseCheckField.check(selectFields[i]));\n      }\n      setMove(1);\n      window.store.dispatch({ type: \"RESET_SELECT_FIELD\" });\n    }\n    // eslint-disable-next-line\n  }, [move]);\n\n  useEffect(() => {\n    if (game.findedTreasures === 3) {\n      window.store.dispatch({ type: \"END\", status: \"END\" });\n    }\n    // eslint-disable-next-line\n  }, [game.findedTreasures]);\n\n  const markField = (field) => {\n    function isFreeField(element) {\n      return element === field;\n    }\n\n    function isCoverField(element) {\n      return element.id === field;\n    }\n\n    if (\n      selectFields.some(isFreeField) === false &&\n      uncoveredFields !== undefined &&\n      uncoveredFields.some(isCoverField) === false\n    ) {\n      window.store.dispatch({ type: \"ADD_SELECT_FIELD\", field: field });\n      setMove((prevState) => prevState + 1);\n    }\n    console.log(selectFields);\n  };\n\n  return (\n    <div className=\"gameBoard\">\n      {line.map((col, id) => {\n        return (\n          <div key={id}>\n            {line.map((row, id) => {\n              return (\n                <div\n                  key={id}\n                  id={`${col + row}`}\n                  className={\n                    selectFields.length > 0 &&\n                    selectFields.includes(`${col + row}`)\n                      ? `${col + row} field select`\n                      : `${col + row} field`\n                  }\n                  onClick={() => markField(col + row)}\n                ></div>\n              );\n            })}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default GameBoard;\n"]},"metadata":{},"sourceType":"module"}